#想定環境:Google Cloud Functions
---
#requirements.txt
google-cloud-pubsub
google-auth
google-api-python-client
---
#credentilals.json
{
  "type": "service_account",
  "project_id": "project_id",
  "private_key_id": "private_key_id",
  "private_key": "private_key",
  "client_email": "client_email",
  "client_id": "client_id",
  "auth_uri": "auth_uri",
  "token_uri": "token_uri",
  "auth_provider_x509_cert_url": "auth_provider_x509_cert_url",
  "client_x509_cert_url": "client_x509_cert_url"
}
---  
import os.path
from googleapiclient.discovery import build
import google.auth
import io
from apiclient.http import MediaIoBaseDownload
from apiclient.http import MediaIoBaseUpload
#認証コード
SCOPES = ["https://www.googleapis.com/auth/drive"]
scoped, project = google.auth.load_credentials_from_file("/content/credentials.json",scopes=SCOPES)
service = build("drive", "v3", credentials=scoped)
---
#main.py
import base64
import json
from google.cloud import pubsub_v1
from googleapiclient.discovery import build
import google.auth
import io
from apiclient.http import MediaIoBaseDownload
from apiclient.http import MediaIoBaseUpload

publisher = pubsub_v1.PublisherClient()
SCOPES = ["https://www.googleapis.com/auth/drive"]
scoped, project = google.auth.load_credentials_from_file("/workspace/credentials.json",scopes=SCOPES)
service = build("drive", "v3", credentials=scoped)

#pubsubへ送るコード
def publishing(destination,content):
  topic_path = publisher.topic_path("project_name",destination)
  data = str(content)
  data = data.encode("utf-8")
  publisher.publish(topic_path,data)

#ファイルのIDをサーチ
def searching(fileName):
  search = service.files().list(
    q = 'name="'+fileName+'"',
    fields = "files(id)"
    ).execute()
  fileId = [i["id"] for i in search["files"]]
  return fileId

#ファイルをダウンロード
def downloading(fileid):
  download = service.files().get_media(fileId=fileid)
  fh = io.BytesIO()
  downloader = MediaIoBaseDownload(fh, download)
  done = False
  while done is False:
    status, done = downloader.next_chunk()
  content = fh.getvalue().decode("utf-8").split(" ")
  return content

#ファイルをアップロード
def uploading(uploadName,fileid,content):
  metadata = {
    "name": uploadName,
    "parents": [fileid]
    }
  str_content = []  
  for i in content:
    str_content.append(str(i))
  joins = " ".join(str_content)
  encoder = joins.encode('utf-8')
  fh = io.BytesIO(encoder)
  media = MediaIoBaseUpload(fh, mimetype='application/json')
  upload = service.files().create(
    body = metadata,
    media_body=media,
    fields='id'
    ).execute()
  u_fileId = upload["id"]
  return u_fileId

#フォルダ下にフォルダを作成
def foldering(folderName,fileid):
  file_metadata = {
    'name':folderName,
    'parents':[fileid],
    'mimeType': 'application/vnd.google-apps.folder'
    }
  folder = service.files().create(
    body = file_metadata,
    fields='id'
    ).execute()
  f_fileId = folder["id"]
  return f_fileId

#ファイルに編集権限を与える
def permissioning(fileid):
  user_permission = {
    'type': 'user',
    'role': 'writer',
    'emailAddress': 'emailAddress'
  }
  permission = service.permissions().create(
      fileId=fileid,
      body=user_permission,
      fields='id'
      ).execute()
      
from requests_oauthlib import OAuth1Session
CONSUMER_KEY = "f2OipTFPTd5GW3b5pprirfmds"
CONSUMER_SECRET = "heigP5zUimK8kDCa5HpHciLKTJFNkEe5NE5aD4KdvCGrmvHNp6"
ACCESS_TOKEN = "1003278744-BQwKlGx24A6Mte4AXu81qpCWXUu5ZAn89e44HFB"
ACCESS_TOKEN_SECRET = "uMxFIvMFDlZb3QusQzYUY0rTfjzw7NjQR1e2Sg2XikZbw"
twitter = OAuth1Session(CONSUMER_KEY,CONSUMER_SECRET,ACCESS_TOKEN,ACCESS_TOKEN_SECRET)
url = "https://api.twitter.com/1.1/friends/ids.json"

def hello_pubsub(event, context):
  pubsub_message = base64.b64decode(event['data']).decode('utf-8')
  follower = pubsub_message

  ids = []
  params = {
    "screen_name":follower,
    "count":5000
    }
  twitter = OAuth1Session(CONSUMER_KEY,CONSUMER_SECRET,ACCESS_TOKEN,ACCESS_TOKEN_SECRET)
  r = twitter.get(url,params=params)

  if "errors" in r.json():
    publishing("sleep",str(0)+follower)
    
  elif not "errors" in r.json():
    data = r.json()
    if data["ids"]:
      for i in data["ids"]:
        ids.append(i)

    s_fileId = searching(follower)
    u_fileId = uploading(follower+"follow",s_fileId,ids)
    permissioning(u_fileId)

    s_fileId = searching("next_"follower+".json")
    next_follower = downloading(s_fileId)
    publishing("follower",str(0)+next_follower[0])
  
  
  
